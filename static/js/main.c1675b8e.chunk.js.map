{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/App/App.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactListButton/ContactListButton.module.css","components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.js","components/ContactListButton/ContactListButton.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/App/App.js","index.js"],"names":["module","exports","ContactListItem","contact","keys","children","className","styles","contactItem","key","name","phone","defaultProps","ContactListButton","onRemoveContact","contactButton","type","onClick","id","ContactList","contacts","onRemove","map","uuid","ContactForm","state","handleChange","e","target","value","setState","hanleSubmit","preventDefault","props","onAddContact","this","form","onSubmit","formLabel","formInput","placeholder","onChange","required","formButton","Component","Filter","onChangeFilter","filter","App","changeFilter","addContact","some","alert","prevState","getFiltredContacts","toLowerCase","includes","removeContact","persistedContacts","localStorage","getItem","console","log","JSON","parse","prevProps","setItem","stringify","visibleContacts","section","title","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1675b8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLabel\":\"ContactForm_formLabel__1hDC-\",\"formInput\":\"ContactForm_formInput__1r2bF\",\"formButton\":\"ContactForm_formButton__2M3aA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1YcTA\",\"section\":\"App_section__1zThd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__3Q33w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactButton\":\"ContactListButton_contactButton__1hXYk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactListItem.module.css\";\n\nexport default function ContactListItem({ contact, keys, children }) {\n  return (\n    <li className={styles.contactItem} key={keys}>\n      <p>\n        {contact.name} : {contact.phone}\n      </p>\n      {children}\n    </li>\n  );\n}\n\nContactListItem.defaultProps = {\n  contact: {},\n  keys: \"\"\n};\n\nContactListItem.propTypes = {\n  contacts: PropTypes.object,\n  keys: PropTypes.string\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactListButton.module.css\";\n\nexport default function ContactListButton({ contact, onRemoveContact }) {\n  return (\n    <button\n      className={styles.contactButton}\n      type=\"button\"\n      onClick={() => onRemoveContact(contact.id)}\n    >\n      Delete\n    </button>\n  );\n}\n\nContactListButton.defaultProps = {\n  contact: {},\n  onRemoveContact: () => {}\n};\n\nContactListButton.propTypes = {\n  contact: PropTypes.object,\n  onRemoveContact: PropTypes.func\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\nimport { uuid } from \"uuidv4\";\nimport ContactListButton from \"../ContactListButton/ContactListButton\";\n\nexport default function ContactList({ contacts, onRemove }) {\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <ContactListItem contact={contact} key={uuid()}>\n          <ContactListButton\n            contact={contact}\n            onRemoveContact={() => onRemove(contact.id)}\n          />\n        </ContactListItem>\n      ))}\n    </ul>\n  );\n}\n\nContactList.defaultProps = {\n  contacts: [],\n  onRemove: () => {}\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onRemove: PropTypes.func\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func\n  };\n  static defaultProps = {\n    onAddContact: () => {}\n  };\n\n  state = {\n    name: \"\",\n    phone: \"\"\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  hanleSubmit = e => {\n    e.preventDefault();\n    const { name, phone } = this.state;\n    this.props.onAddContact(name, phone);\n    this.setState({ name: \"\", phone: \"\" });\n  };\n\n  render() {\n    const { name, phone } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.hanleSubmit}>\n        <label className={styles.formLabel}>\n          Name\n          <input\n            className={styles.formInput}\n            type=\"text\"\n            value={name}\n            placeholder=\"Enter name\"\n            onChange={this.handleChange}\n            name=\"name\"\n            required\n          ></input>\n        </label>\n        <label className={styles.formLabel}>\n          Phone\n          <input\n            className={styles.formInput}\n            type=\"text\"\n            value={phone}\n            placeholder=\"Enter phone\"\n            onChange={this.handleChange}\n            name=\"phone\"\n            required\n          ></input>\n        </label>\n        <button className={styles.formButton} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nexport default function Filter({ value, onChangeFilter }) {\n  return (\n    <div>\n      <input\n        className={styles.filter}\n        type=\"text\"\n        value={value}\n        onChange={e => onChangeFilter(e.target.value)}\n      ></input>\n    </div>\n  );\n}\n\nFilter.defaultProps = {\n  value: \"\",\n  onChangeFilter: () => {}\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func\n};\n","import React, { Component } from \"react\";\nimport ContactList from \"../ContactList/ContactList\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport Filter from \"../Filter/Filter\";\nimport styles from \"./App.module.css\";\nimport { uuid } from \"uuidv4\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\"\n  };\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n    console.log(persistedContacts);\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts)\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  addContact = (name, phone) => {\n    const { contacts } = this.state;\n    const isExist = contacts.some(contact => contact.name === name);\n    if (isExist) {\n      alert(`${name} is already in cntacts!`);\n      return;\n    }\n    const contact = { id: uuid(), name, phone };\n    this.setState(prevState => {\n      return { contacts: [...prevState.contacts, contact] };\n    });\n  };\n\n  getFiltredContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = id => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(contact => contact.id !== id)\n      };\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const visibleContacts = this.getFiltredContacts();\n    return (\n      <section className={styles.section}>\n        <h1 className={styles.title}>Phonebook</h1>\n        {ContactForm && <ContactForm onAddContact={this.addContact} />}\n        <h2 className={styles.title}>Contacts</h2>\n        {contacts.length > 1 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        {visibleContacts.length > 0 && (\n          <ContactList\n            contacts={visibleContacts}\n            onRemove={this.removeContact}\n          />\n        )}\n      </section>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport \"./css/main.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}